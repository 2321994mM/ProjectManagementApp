// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectManagementApi.Data;

#nullable disable

namespace ProjectManagementApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectManagementApi.Model.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Budget = 1000m,
                            Description = "Description A",
                            OwnerId = 1,
                            ProjectName = "Project A",
                            StartDate = new DateTime(2024, 11, 1, 13, 42, 9, 800, DateTimeKind.Local).AddTicks(3312),
                            Status = "Active"
                        },
                        new
                        {
                            ProjectId = 2,
                            Budget = 2000m,
                            Description = "Description B",
                            OwnerId = 1,
                            ProjectName = "Project B",
                            StartDate = new DateTime(2024, 11, 1, 13, 42, 9, 800, DateTimeKind.Local).AddTicks(3374),
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("ProjectManagementApi.Model.Tasks", b =>
                {
                    b.Property<int>("TasksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TasksId"));

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TasksName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TasksStatusId")
                        .HasColumnType("int");

                    b.HasKey("TasksId");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TasksStatusId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            TasksId = 1,
                            Description = "Task 1 Description",
                            Priority = "High",
                            ProjectId = 1,
                            StartDate = new DateTime(2024, 11, 1, 13, 42, 9, 800, DateTimeKind.Local).AddTicks(3396),
                            TasksName = "Task 1",
                            TasksStatusId = 1
                        },
                        new
                        {
                            TasksId = 2,
                            AssignedToId = 2,
                            Description = "Task 2 Description",
                            Priority = "Medium",
                            ProjectId = 2,
                            StartDate = new DateTime(2024, 11, 1, 13, 42, 9, 800, DateTimeKind.Local).AddTicks(3402),
                            TasksName = "Task 2",
                            TasksStatusId = 2
                        });
                });

            modelBuilder.Entity("ProjectManagementApi.Model.TasksStatus", b =>
                {
                    b.Property<int>("TasksStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TasksStatusId"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TasksStatusId");

                    b.ToTable("TaskStatuses");

                    b.HasData(
                        new
                        {
                            TasksStatusId = 1,
                            Status = "Not Started"
                        },
                        new
                        {
                            TasksStatusId = 2,
                            Status = "In Progress"
                        },
                        new
                        {
                            TasksStatusId = 3,
                            Status = "Completed"
                        });
                });

            modelBuilder.Entity("ProjectManagementApi.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            PasswordHash = "ssss",
                            RoleId = 1,
                            Username = "Alice"
                        },
                        new
                        {
                            UserId = 2,
                            PasswordHash = "sss",
                            RoleId = 2,
                            Username = "Bob"
                        });
                });

            modelBuilder.Entity("ProjectManagementApi.Model.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            RoleName = "Manager"
                        },
                        new
                        {
                            UserRoleId = 2,
                            RoleName = "Employee"
                        });
                });

            modelBuilder.Entity("ProjectManagementApi.Model.Project", b =>
                {
                    b.HasOne("ProjectManagementApi.Model.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ProjectManagementApi.Model.Tasks", b =>
                {
                    b.HasOne("ProjectManagementApi.Model.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProjectManagementApi.Model.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectManagementApi.Model.TasksStatus", "Status")
                        .WithMany()
                        .HasForeignKey("TasksStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedTo");

                    b.Navigation("Project");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ProjectManagementApi.Model.User", b =>
                {
                    b.HasOne("ProjectManagementApi.Model.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ProjectManagementApi.Model.Project", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
